image: docker:dind
services:
  - docker:dind

stages:
  - build
  - run

variables:
  BUILD: "${CI_REGISTRY_IMAGE}:${BRANCH}_${CI_COMMIT_SHORT_SHA}"

build:
  stage: build
  tags: 
    - vadeb11_runner
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      variables:
        BRANCH: "app_prod"
      when: always
    - if: '$CI_COMMIT_REF_NAME == "dev"'
      variables:
        BRANCH: "app_dev"
      when: always
  before_script:
    - echo $BUILD
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd app/django1/
    - docker build -t $BUILD .
    - docker push $BUILD
    - cd ../../
    - docker build -t "${BUILD}_nginx" -f ./app/nginx/Dockerfile .
    - docker push "${BUILD}_nginx"
    - docker build -t "${CI_REGISTRY_IMAGE}:alpine_ans" -f ./app/alpine_ans/Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:alpine_ans"

run:
  stage: run
  tags:
    - vadeb11_runner
  image:
    name: "${CI_REGISTRY_IMAGE}:alpine_ans"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      variables:
        BRANCH: "app_prod"
        PORT: '8000'
      when: always
    - if: '$CI_COMMIT_REF_NAME == "dev"'
      variables:
        BRANCH: "app_dev"
        PORT: '8001'
      when: always
  variables:
    BUILD: "${CI_REGISTRY_IMAGE}:${BRANCH}_${CI_COMMIT_SHORT_SHA}"
  before_script:
    - echo $BUILD
  script:
#    - docker-compose up -d
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - echo "${PRIVATE_KEY}" > /app/private_key && chmod 400 /app/private_key
    - cd /app/
    - ansible-playbook -i web-srv/ -u admin nginx.yml --extra-var "PORT=$PORT BUILD=$BUILD Password=$CI_REGISTRY_PASSWORD" --private-key ./private_key
